<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsh.wms.core.dao.task.TaskInfoDao" >

	<resultMap id="taskInfoResultMap" type="TaskInfo">
		<id property="id" column="id"/>
		<result property="taskId" column="task_id"/>
		<result property="planId" column="plan_id"/>
		<result property="locationId" column="location_id"/>
		<result property="skuId" column="sku_id"/>
		<result property="containerId" column="container_id"/>
		<result property="type" column="type"/>
		<result property="status" column="status"/>
		<result property="priority" column="priority"/>
		<result property="operator" column="operator"/>
		<result property="draftTime" column="draft_time"/>
		<result property="allocTime" column="alloc_time"/>
		<result property="dueTime" column="due_time"/>
		<result property="finishTime" column="finish_time"/>
		<result property="cancelTime" column="cancel_time"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
	</resultMap>
  
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="TaskInfo">
		insert into TASK_INFO (
			task_id,plan_id,location_id,sku_id,container_id,type,
			status,priority,operator,draft_time,alloc_time,due_time,
			finish_time,cancel_time,created_at,updated_at
    	) values (
			#{taskId},#{planId},#{locationId},#{skuId},#{containerId},#{type},
			#{status},#{priority},#{operator},#{draftTime},#{allocTime},#{dueTime},
			#{finishTime},#{cancelTime},#{createdAt},#{updatedAt}
    	)
	</insert>

	<update id="update" parameterType="TaskInfo">
		update TASK_INFO
    	<set>
  			<if test="taskId != null">task_id=#{taskId},</if>
  			<if test="planId != null">plan_id=#{planId},</if>
  			<if test="locationId != null">location_id=#{locationId},</if>
  			<if test="skuId != null">sku_id=#{skuId},</if>
  			<if test="containerId != null">container_id=#{containerId},</if>
  			<if test="type != null">type=#{type},</if>
  			<if test="status != null">status=#{status},</if>
  			<if test="priority != null">priority=#{priority},</if>
  			<if test="operator != null">operator=#{operator},</if>
  			<if test="draftTime != null">draft_time=#{draftTime},</if>
  			<if test="allocTime != null">alloc_time=#{allocTime},</if>
  			<if test="dueTime != null">due_time=#{dueTime},</if>
  			<if test="finishTime != null">finish_time=#{finishTime},</if>
  			<if test="cancelTime != null">cancel_time=#{cancelTime},</if>
  			<if test="createdAt != null">created_at=#{createdAt},</if>
  			<if test="updatedAt != null">updated_at=#{updatedAt}</if>
		</set>
		where id=#{id}
	</update>
  
	<select id="getTaskInfoById" parameterType="int" resultMap="taskInfoResultMap">
		select * from TASK_INFO
		where ID=#{id} 
	</select>
  
	<select id="countTaskInfo" parameterType="map" resultType="int">
		select count(*) from TASK_INFO
		<include refid="queryCondition"/>
	</select>
  
	<select id="getTaskInfoList" parameterType="map" resultMap="taskInfoResultMap">
		select * from TASK_INFO
		<include refid="queryCondition"/>
		<if test="start != null and limit != null">
		limit #{start},#{limit}
		</if>
	</select>
  
	<sql id="queryCondition">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="taskId != null">and task_id=#{taskId}</if>
			<if test="planId != null">and plan_id=#{planId}</if>
			<if test="locationId != null">and location_id=#{locationId}</if>
			<if test="skuId != null">and sku_id=#{skuId}</if>
			<if test="containerId != null">and container_id=#{containerId}</if>
			<if test="type != null">and type=#{type}</if>
			<if test="status != null">and status=#{status}</if>
			<if test="priority != null">and priority=#{priority}</if>
			<if test="operator != null">and operator=#{operator}</if>
			<if test="draftTime != null">and draft_time=#{draftTime}</if>
			<if test="allocTime != null">and alloc_time=#{allocTime}</if>
			<if test="dueTime != null">and due_time=#{dueTime}</if>
			<if test="finishTime != null">and finish_time=#{finishTime}</if>
			<if test="cancelTime != null">and cancel_time=#{cancelTime}</if>
			<if test="createdAt != null">and created_at=#{createdAt}</if>
			<if test="updatedAt != null">and updated_at=#{updatedAt}</if>
		</where>
	</sql>
   
</mapper>